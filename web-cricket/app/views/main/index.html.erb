<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
		<title>WebCricket v0.001</title>
	</head>

	<body>
        <canvas id="canvas" width="1000px" height="750px"></canvas>
    </body>

    <script type="text/javascript">
        canvas = document.getElementById("canvas");
        g = canvas.getContext("2d");
        targetFPS = 200;
        frameCounter = 0
        gameTime = 0.0;
        gameResetTime = 0.0;
        screenOrigin = [500,450];
    </script>


    <%= javascript_include_tag('data/sprites') %>
    <%= javascript_include_tag('data/field_settings') %>
    <%= javascript_include_tag('data/util') %>
    <%= javascript_include_tag('model/class') %>
    <%= javascript_include_tag('model/fielders') %>
    <%= javascript_include_tag('model/ground') %>
    <%= javascript_include_tag('model/pitch') %>

    <script type="text/javascript">
        var mouseLoc = [0,0];

        var pitchRenderer = new PitchRenderer();
        var pitchModel = new PitchModel();
        var stumpRenderer = new StumpsRenderer();
        var stumpModel = new StumpsModel();
        var groundRenderer = new GroundRenderer();
        var groundModel = new GroundModel();

        init();
        gameLoop();

        // =============================================================================================================
        // Game state updates
        // =============================================================================================================

        function update()
        {
            gameTime = (new Date().getTime() - gameResetTime) / 1000.0;
            updatePeople();
        }


        function updatePeople()
        {
        }

        // =============================================================================================================
        // render loop
        // =============================================================================================================

        function render()
        {
            //renderGroundBitmap();
            renderFixtures();
            renderPeople();
            renderOverlay();
        }

        function renderFixtures()
        {
            groundRenderer.render(groundModel, g, [0,0]);
            pitchRenderer.render(pitchModel, g, [0,0]);
            stumpRenderer.render(stumpModel, g, [0,0]);
            stumpRenderer.render(stumpModel, g, [0,21.5]);
        }

        function renderOverlay()
        {
            g.fontSize = "11pt";
            g.fillStyle = "black";
            g.fillText("frameCounter: " + frameCounter, 30, 34);
            g.fillText("gameTime: " + gameTime.toFixed(2), 30, 54);
            if(gameTime > 1)
                g.fillText("fps: " + (frameCounter / gameTime).toFixed(1) + "fps", 30, 74);
        }

        function renderPeople()
        {
            var people = personController.all();
            for(var i=0; i<people.length; i++)
            {
                var person = people[i];
                var sloc = convertWorldToScreen(person.location());

                drawSprite(g, 1, 0, sloc);

                if(mouseDistance(sloc) < 25)
                {
                    g.fillStyle = "white";
                    g.fillText(person.display(), sloc[0] - 10, sloc[1] + 10);
                }
            }
        }

        function mouseDistance(loc)
        {
            var dx = loc[0] - mouseLoc[0];
            var dy = loc[1] - mouseLoc[1];
            return Math.sqrt(dx*dx + dy*dy);
        }

        // =============================================================================================================
        // Game setup
        // =============================================================================================================

        function init()
        {
            canvas.addEventListener('mousemove', mousemove, false);
            canvas.addEventListener('click', mouseclick, false);

            g.width = 800;
            g.height = 600;

            personController = new PersonController();
            reset();
        }

        function reset()
        {
            personController.reset();
            gameTime = 0.0;
            gameResetTime = new Date().getTime();
            frameCounter = 0;
        }

        function mouseclick(ev)
        {
            personController.sendFielderTo(convertScreenToWorld([ev.layerX, ev.layerY]));
        }

        function mousemove(ev)
        {
            // Get the mouse position relative to the canvas element.
            if (ev.layerX || ev.layerX == 0)
            {
                mouseLoc = [ev.layerX, ev.layerY];
            }
            else if (ev.offsetX || ev.offsetX == 0)
            {
                mouseLoc = [ev.offsetX, ev.offsetY];
            }
        }

        function gameLoop()
        {
            update();
            clearScreen();
            render();
            setTimeout("gameLoop()", 1000.0 / targetFPS);
        }

        function clearScreen()
        {
            frameCounter ++;

            // clear screen
            g.fillStyle = "#efe";
            g.fillRect(0, 0, 10000, 10000);
        }

    </script>
</html>
