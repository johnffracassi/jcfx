package com.jeff.sw;

import java.io.FileOutputStream;
import java.io.IOException;

import javax.xml.transform.OutputKeys;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerConfigurationException;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;

import org.w3c.dom.Document;

public class XMLOutputter
{
	public static void output(Document document, String filename)
	{
		try
		{
			// Use a Transformer for output
			TransformerFactory tFactory = TransformerFactory.newInstance();
			Transformer transformer = tFactory.newTransformer();
			DOMSource source = new DOMSource(document);
			
			FileOutputStream fos = new FileOutputStream(filename);
			StreamResult result = new StreamResult(fos);
			transformer.setOutputProperty(OutputKeys.INDENT, "yes");
			transformer.setOutputProperty(OutputKeys.METHOD, "xml");
			transformer.transform(source, result);
			fos.close();
		}
		catch (TransformerConfigurationException tce)
		{
			// Error generated by the parser
			System.out.println("\n** Transformer Factory error");
			System.out.println("   " + tce.getMessage());

			// Use the contained exception, if any
			Throwable x = tce;

			if (tce.getException() != null)
			{
				x = tce.getException();
			}

			x.printStackTrace();
		}
		catch (TransformerException te)
		{
			// Error generated by the parser
			System.out.println("\n** Transformation error");
			System.out.println("   " + te.getMessage());

			// Use the contained exception, if any
			Throwable x = te;

			if (te.getException() != null)
			{
				x = te.getException();
			}

			x.printStackTrace();
		}
		catch (IOException ioe)
		{
			ioe.printStackTrace();
		}
	} 
}
