//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-520 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2008.12.01 at 02:50:57 PM GMT 
//


package com.siebentag.cj.model;

import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.builder.JAXBEqualsBuilder;
import org.jvnet.jaxb2_commons.lang.builder.JAXBHashCodeBuilder;


/**
 * <p>Java class for Ball complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Ball">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="objectId" type="{http://www.w3.org/2001/XMLSchema}long"/>
 *         &lt;element name="ordinal" type="{http://www.siebentag.com/steamboat/xsd}Ordinal"/>
 *         &lt;element name="striker" type="{http://www.siebentag.com/steamboat/xsd}Player"/>
 *         &lt;element name="nonStriker" type="{http://www.siebentag.com/steamboat/xsd}Player"/>
 *         &lt;element name="bowler" type="{http://www.siebentag.com/steamboat/xsd}Player"/>
 *         &lt;element name="fielder" type="{http://www.siebentag.com/steamboat/xsd}Player"/>
 *         &lt;element name="keeper" type="{http://www.siebentag.com/steamboat/xsd}Player"/>
 *         &lt;element name="ballCountsForBowler" type="{http://www.w3.org/2001/XMLSchema}boolean"/>
 *         &lt;element name="ballCountsForBatsman" type="{http://www.w3.org/2001/XMLSchema}boolean"/>
 *         &lt;element name="runsForBowler" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="runsForBatsman" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="runsForTeam" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="wicket" type="{http://www.siebentag.com/steamboat/xsd}Wicket"/>
 *         &lt;element name="extra" type="{http://www.siebentag.com/steamboat/xsd}Extra"/>
 *         &lt;element name="boundaryType" type="{http://www.siebentag.com/steamboat/xsd}BoundaryType"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Ball", propOrder = {
    "objectId",
    "ordinal",
    "striker",
    "nonStriker",
    "bowler",
    "fielder",
    "keeper",
    "ballCountsForBowler",
    "ballCountsForBatsman",
    "runsForBowler",
    "runsForBatsman",
    "runsForTeam",
    "wicket",
    "extra",
    "boundaryType"
})
@Entity(name = "com.siebentag.cj.model.Ball")
@Table(name = "t_ball")
@Inheritance(strategy = InheritanceType.JOINED)
public class Ball
    implements Equals, HashCode
{

    protected long objectId;
    protected int ordinal;
    @XmlElement(required = true)
    protected com.siebentag.cj.model.Player striker;
    @XmlElement(required = true)
    protected com.siebentag.cj.model.Player nonStriker;
    @XmlElement(required = true)
    protected com.siebentag.cj.model.Player bowler;
    @XmlElement(required = true)
    protected com.siebentag.cj.model.Player fielder;
    @XmlElement(required = true)
    protected com.siebentag.cj.model.Player keeper;
    protected boolean ballCountsForBowler;
    protected boolean ballCountsForBatsman;
    protected int runsForBowler;
    protected int runsForBatsman;
    protected int runsForTeam;
    @XmlElement(required = true)
    protected com.siebentag.cj.model.Wicket wicket;
    @XmlElement(required = true)
    protected com.siebentag.cj.model.Extra extra;
    @XmlElement(required = true)
    protected BoundaryType boundaryType;

    /**
     * Gets the value of the objectId property.
     * 
     */
    @Id
    @Column(name = "object_id", scale = 0)
    @GeneratedValue(strategy = GenerationType.AUTO)
    public long getObjectId() {
        return objectId;
    }

    /**
     * Sets the value of the objectId property.
     * 
     */
    public void setObjectId(long value) {
        this.objectId = value;
    }

    @Transient
    public boolean isSetObjectId() {
        return true;
    }

    /**
     * Gets the value of the ordinal property.
     * 
     */
    @Basic
    @Column(name = "ordinal", scale = 0)
    public int getOrdinal() {
        return ordinal;
    }

    /**
     * Sets the value of the ordinal property.
     * 
     */
    public void setOrdinal(int value) {
        this.ordinal = value;
    }

    @Transient
    public boolean isSetOrdinal() {
        return true;
    }

    /**
     * Gets the value of the striker property.
     * 
     * @return
     *     possible object is
     *     {@link com.siebentag.cj.model.Player }
     *     
     */
    @ManyToOne(targetEntity = com.siebentag.cj.model.Player.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ball_striker_id")
    public com.siebentag.cj.model.Player getStriker() {
        return striker;
    }

    /**
     * Sets the value of the striker property.
     * 
     * @param value
     *     allowed object is
     *     {@link com.siebentag.cj.model.Player }
     *     
     */
    public void setStriker(com.siebentag.cj.model.Player value) {
        this.striker = value;
    }

    @Transient
    public boolean isSetStriker() {
        return (this.striker!= null);
    }

    /**
     * Gets the value of the nonStriker property.
     * 
     * @return
     *     possible object is
     *     {@link com.siebentag.cj.model.Player }
     *     
     */
    @ManyToOne(targetEntity = com.siebentag.cj.model.Player.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ball_non_striker_id")
    public com.siebentag.cj.model.Player getNonStriker() {
        return nonStriker;
    }

    /**
     * Sets the value of the nonStriker property.
     * 
     * @param value
     *     allowed object is
     *     {@link com.siebentag.cj.model.Player }
     *     
     */
    public void setNonStriker(com.siebentag.cj.model.Player value) {
        this.nonStriker = value;
    }

    @Transient
    public boolean isSetNonStriker() {
        return (this.nonStriker!= null);
    }

    /**
     * Gets the value of the bowler property.
     * 
     * @return
     *     possible object is
     *     {@link com.siebentag.cj.model.Player }
     *     
     */
    @ManyToOne(targetEntity = com.siebentag.cj.model.Player.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ball_bowler_id")
    public com.siebentag.cj.model.Player getBowler() {
        return bowler;
    }

    /**
     * Sets the value of the bowler property.
     * 
     * @param value
     *     allowed object is
     *     {@link com.siebentag.cj.model.Player }
     *     
     */
    public void setBowler(com.siebentag.cj.model.Player value) {
        this.bowler = value;
    }

    @Transient
    public boolean isSetBowler() {
        return (this.bowler!= null);
    }

    /**
     * Gets the value of the fielder property.
     * 
     * @return
     *     possible object is
     *     {@link com.siebentag.cj.model.Player }
     *     
     */
    @ManyToOne(targetEntity = com.siebentag.cj.model.Player.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ball_fielder_id")
    public com.siebentag.cj.model.Player getFielder() {
        return fielder;
    }

    /**
     * Sets the value of the fielder property.
     * 
     * @param value
     *     allowed object is
     *     {@link com.siebentag.cj.model.Player }
     *     
     */
    public void setFielder(com.siebentag.cj.model.Player value) {
        this.fielder = value;
    }

    @Transient
    public boolean isSetFielder() {
        return (this.fielder!= null);
    }

    /**
     * Gets the value of the keeper property.
     * 
     * @return
     *     possible object is
     *     {@link com.siebentag.cj.model.Player }
     *     
     */
    @ManyToOne(targetEntity = com.siebentag.cj.model.Player.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ball_keeper_id")
    public com.siebentag.cj.model.Player getKeeper() {
        return keeper;
    }

    /**
     * Sets the value of the keeper property.
     * 
     * @param value
     *     allowed object is
     *     {@link com.siebentag.cj.model.Player }
     *     
     */
    public void setKeeper(com.siebentag.cj.model.Player value) {
        this.keeper = value;
    }

    @Transient
    public boolean isSetKeeper() {
        return (this.keeper!= null);
    }

    /**
     * Gets the value of the ballCountsForBowler property.
     * 
     */
    @Basic
    @Column(name = "ball_counts_for_bowler")
    public boolean isBallCountsForBowler() {
        return ballCountsForBowler;
    }

    /**
     * Sets the value of the ballCountsForBowler property.
     * 
     */
    public void setBallCountsForBowler(boolean value) {
        this.ballCountsForBowler = value;
    }

    @Transient
    public boolean isSetBallCountsForBowler() {
        return true;
    }

    /**
     * Gets the value of the ballCountsForBatsman property.
     * 
     */
    @Basic
    @Column(name = "ball_counts_for_batsman")
    public boolean isBallCountsForBatsman() {
        return ballCountsForBatsman;
    }

    /**
     * Sets the value of the ballCountsForBatsman property.
     * 
     */
    public void setBallCountsForBatsman(boolean value) {
        this.ballCountsForBatsman = value;
    }

    @Transient
    public boolean isSetBallCountsForBatsman() {
        return true;
    }

    /**
     * Gets the value of the runsForBowler property.
     * 
     */
    @Basic
    @Column(name = "runs_for_bowler", scale = 0)
    public int getRunsForBowler() {
        return runsForBowler;
    }

    /**
     * Sets the value of the runsForBowler property.
     * 
     */
    public void setRunsForBowler(int value) {
        this.runsForBowler = value;
    }

    @Transient
    public boolean isSetRunsForBowler() {
        return true;
    }

    /**
     * Gets the value of the runsForBatsman property.
     * 
     */
    @Basic
    @Column(name = "runs_for_batsman", scale = 0)
    public int getRunsForBatsman() {
        return runsForBatsman;
    }

    /**
     * Sets the value of the runsForBatsman property.
     * 
     */
    public void setRunsForBatsman(int value) {
        this.runsForBatsman = value;
    }

    @Transient
    public boolean isSetRunsForBatsman() {
        return true;
    }

    /**
     * Gets the value of the runsForTeam property.
     * 
     */
    @Basic
    @Column(name = "runs_for_team", scale = 0)
    public int getRunsForTeam() {
        return runsForTeam;
    }

    /**
     * Sets the value of the runsForTeam property.
     * 
     */
    public void setRunsForTeam(int value) {
        this.runsForTeam = value;
    }

    @Transient
    public boolean isSetRunsForTeam() {
        return true;
    }

    /**
     * Gets the value of the wicket property.
     * 
     * @return
     *     possible object is
     *     {@link com.siebentag.cj.model.Wicket }
     *     
     */
    @ManyToOne(targetEntity = com.siebentag.cj.model.Wicket.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ball_wicket_id")
    public com.siebentag.cj.model.Wicket getWicket() {
        return wicket;
    }

    /**
     * Sets the value of the wicket property.
     * 
     * @param value
     *     allowed object is
     *     {@link com.siebentag.cj.model.Wicket }
     *     
     */
    public void setWicket(com.siebentag.cj.model.Wicket value) {
        this.wicket = value;
    }

    @Transient
    public boolean isSetWicket() {
        return (this.wicket!= null);
    }

    /**
     * Gets the value of the extra property.
     * 
     * @return
     *     possible object is
     *     {@link com.siebentag.cj.model.Extra }
     *     
     */
    @ManyToOne(targetEntity = com.siebentag.cj.model.Extra.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ball_extra_id")
    public com.siebentag.cj.model.Extra getExtra() {
        return extra;
    }

    /**
     * Sets the value of the extra property.
     * 
     * @param value
     *     allowed object is
     *     {@link com.siebentag.cj.model.Extra }
     *     
     */
    public void setExtra(com.siebentag.cj.model.Extra value) {
        this.extra = value;
    }

    @Transient
    public boolean isSetExtra() {
        return (this.extra!= null);
    }

    /**
     * Gets the value of the boundaryType property.
     * 
     * @return
     *     possible object is
     *     {@link BoundaryType }
     *     
     */
    @Basic
    @Column(name = "boundary_type")
    @Enumerated(EnumType.STRING)
    public BoundaryType getBoundaryType() {
        return boundaryType;
    }

    /**
     * Sets the value of the boundaryType property.
     * 
     * @param value
     *     allowed object is
     *     {@link BoundaryType }
     *     
     */
    public void setBoundaryType(BoundaryType value) {
        this.boundaryType = value;
    }

    @Transient
    public boolean isSetBoundaryType() {
        return (this.boundaryType!= null);
    }

    public void equals(Object object, EqualsBuilder equalsBuilder) {
        if (!(object instanceof Ball)) {
            equalsBuilder.appendSuper(false);
            return ;
        }
        if (this == object) {
            return ;
        }
        final Ball that = ((Ball) object);
        equalsBuilder.append(this.getObjectId(), that.getObjectId());
        equalsBuilder.append(this.getOrdinal(), that.getOrdinal());
        equalsBuilder.append(this.getStriker(), that.getStriker());
        equalsBuilder.append(this.getNonStriker(), that.getNonStriker());
        equalsBuilder.append(this.getBowler(), that.getBowler());
        equalsBuilder.append(this.getFielder(), that.getFielder());
        equalsBuilder.append(this.getKeeper(), that.getKeeper());
        equalsBuilder.append(this.isBallCountsForBowler(), that.isBallCountsForBowler());
        equalsBuilder.append(this.isBallCountsForBatsman(), that.isBallCountsForBatsman());
        equalsBuilder.append(this.getRunsForBowler(), that.getRunsForBowler());
        equalsBuilder.append(this.getRunsForBatsman(), that.getRunsForBatsman());
        equalsBuilder.append(this.getRunsForTeam(), that.getRunsForTeam());
        equalsBuilder.append(this.getWicket(), that.getWicket());
        equalsBuilder.append(this.getExtra(), that.getExtra());
        equalsBuilder.append(this.getBoundaryType(), that.getBoundaryType());
    }

    public boolean equals(Object object) {
        if (!(object instanceof Ball)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final EqualsBuilder equalsBuilder = new JAXBEqualsBuilder();
        equals(object, equalsBuilder);
        return equalsBuilder.isEquals();
    }

    public void hashCode(HashCodeBuilder hashCodeBuilder) {
        hashCodeBuilder.append(this.getObjectId());
        hashCodeBuilder.append(this.getOrdinal());
        hashCodeBuilder.append(this.getStriker());
        hashCodeBuilder.append(this.getNonStriker());
        hashCodeBuilder.append(this.getBowler());
        hashCodeBuilder.append(this.getFielder());
        hashCodeBuilder.append(this.getKeeper());
        hashCodeBuilder.append(this.isBallCountsForBowler());
        hashCodeBuilder.append(this.isBallCountsForBatsman());
        hashCodeBuilder.append(this.getRunsForBowler());
        hashCodeBuilder.append(this.getRunsForBatsman());
        hashCodeBuilder.append(this.getRunsForTeam());
        hashCodeBuilder.append(this.getWicket());
        hashCodeBuilder.append(this.getExtra());
        hashCodeBuilder.append(this.getBoundaryType());
    }

    public int hashCode() {
        final HashCodeBuilder hashCodeBuilder = new JAXBHashCodeBuilder();
        hashCode(hashCodeBuilder);
        return hashCodeBuilder.toHashCode();
    }

}
